{"version":3,"sources":["components/ImageGalleryItem/ImageGalleryItem.module.css","components/Modal/Modal.module.css","components/ImageGallery/ImageGallery.module.css","components/Button/Button.module.css","components/Container/Container.js","components/SearchBar/SearchBar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Button/Button.js","components/Modal/Modal.js","services/Pixabay.js","App.js","index.js","components/SearchBar/SearchBar.module.css"],"names":["module","exports","Container","children","className","SearchBar","state","query","handleSubmit","e","preventDefault","trim","props","onSubmit","setState","alert","handleValueChange","currentTarget","value","this","s","SearchForm","type","SearchForm_button","SearchForm_button_label","SearchForm_input","autoComplete","autoFocus","placeholder","onChange","Component","ImageGalleryItem","webformatURL","largeImageURL","tags","onSetImgInfo","i","src","alt","ImageGalleryItemImage","onClick","ImageGallery","gallery","im","map","idx","Button","onLoadMore","b","modalRoot","document","querySelector","Modal","handleKeyDown","code","onClose","handleClickBackdrop","target","window","addEventListener","removeEventListener","createPortal","m","Overlay","axios","defaults","baseURL","fetchImg","page","url","get","then","data","hits","propTypes","PropTypes","string","isRequired","number","App","loading","showModal","error","search","getImgs","length","prevState","scrollPageDown","catch","finally","scrollTo","top","documentElement","scrollHeight","behavior","toggleModal","setImgInfo","prevProps","color","height","width","timeout","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.53a0d10e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__1DNej\",\"ImageGalleryItemImage\":\"ImageGalleryItem_ImageGalleryItemImage__3ILPR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__bBXJg\",\"Modal\":\"Modal_Modal__3ZPma\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__2BLg3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__24zdE\"};","import PropTypes from \"prop-types\";\n\nconst Container = ({ children }) => <div className=\"Container\">{children}</div>;\n\nContainer.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default Container;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./SearchBar.module.css\";\n\nclass SearchBar extends Component {\n  state = {\n    query: \"\", // поле которое хранит значение input\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault(); //что бы не перезагрузилась страница. Обязательно\n    const { query } = this.state;\n\n    if (query.trim() === \"\") {\n      alert(\"Enter what you are looking\");\n      return;\n    }\n    this.props.onSubmit(query);\n    this.setState({ query: \"\" });\n  };\n\n  handleValueChange = (e) => {\n    // метод который обновляет значение input при каждом изменении\n    this.setState({ query: e.currentTarget.value });\n  };\n\n  render() {\n    const { query } = this.state;\n    return (\n      <>\n        <header className={s.SearchBar}>\n          <form className={s.SearchForm} onSubmit={this.handleSubmit}>\n            <button type=\"submit\" className={s.SearchForm_button}>\n              <span className={s.SearchForm_button_label}>Search</span>\n            </button>\n\n            <input\n              className={s.SearchForm_input}\n              type=\"text\"\n              autoComplete=\"off\"\n              autoFocus\n              placeholder=\"Search images and photos\"\n              value={query} // устанавливает значение input взависимости от state\n              onChange={this.handleValueChange} // тут привязываем метод который обновляет значение state\n            />\n          </form>\n        </header>\n      </>\n    );\n  }\n}\n\nSearchBar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default SearchBar;\n","import PropTypes from \"prop-types\";\nimport i from \"./ImageGalleryItem.module.css\";\n\nconst ImageGalleryItem = ({\n  webformatURL,\n  largeImageURL,\n  tags = \"\",\n  onSetImgInfo,\n}) => {\n  return (\n    <li className={i.ImageGalleryItem}>\n      <img\n        src={webformatURL}\n        alt={tags}\n        className={i.ImageGalleryItemImage}\n        onClick={() => {\n          onSetImgInfo({ largeImageURL, tags });\n        }}\n      />\n    </li>\n  );\n};\n\nImageGalleryItem.propTypes = {\n  webformatURL: PropTypes.string.isRequired,\n  largeImageURL: PropTypes.string.isRequired,\n  tags: PropTypes.string,\n  onSetImgInfo: PropTypes.func.isRequired,\n};\n\nexport default ImageGalleryItem;\n","import ImageGalleryItem from \"../ImageGalleryItem\";\nimport PropTypes from \"prop-types\";\nimport im from \"./ImageGallery.module.css\";\n\nconst ImageGallery = ({ gallery, onSetImgInfo }) => (\n  <ul className={im.ImageGallery}>\n    {gallery.map(({ webformatURL, largeImageURL, tags }, idx) => (\n      <ImageGalleryItem\n        key={idx}\n        webformatURL={webformatURL}\n        largeImageURL={largeImageURL}\n        tags={tags}\n        onSetImgInfo={onSetImgInfo}\n      />\n    ))}\n  </ul>\n);\n\nImageGallery.propTypes = {\n  gallery: PropTypes.array.isRequired,\n  onSetImgInfo: PropTypes.func.isRequired,\n};\n\nexport default ImageGallery;\n","import PropTypes from \"prop-types\";\nimport b from \"./Button.module.css\";\n\nconst Button = ({ onLoadMore }) => (\n  <button type=\"button\" className={b.Button} onClick={() => onLoadMore()}>\n    Load more\n  </button>\n);\n\nButton.propTypes = {\n  onLoadMore: PropTypes.func.isRequired,\n};\n\nexport default Button;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { createPortal } from \"react-dom\"; // специальный метод\nimport m from \"./Modal.module.css\";\n\nconst modalRoot = document.querySelector(\"#modal-root\"); //<div id=\"modal-root\"></div>\n\nclass Modal extends Component {\n  componentDidMount() {\n    window.addEventListener(\"keydown\", this.handleKeyDown);\n  }\n  componentWillUnmount() {\n    // метод который снимает, размонтирует EventListener с window\n    window.removeEventListener(\"keydown\", this.handleKeyDown);\n  }\n\n  handleKeyDown = (e) => {\n    if (e.code === \"Escape\") {\n      this.props.onClose();\n    }\n  };\n  handleClickBackdrop = (e) => {\n    if (e.currentTarget === e.target) {\n      this.props.onClose();\n    }\n  };\n\n  render() {\n    // вызываем спец.метод , туда первым аргументом передаем разметку, а вторым - ссылку на то где эта модалка будет (id=\"modal-root\")\n    return createPortal(\n      <div className={m.Overlay} onClick={this.handleClickBackdrop}>\n        <div className={m.Modal}>{this.props.children}</div>\n      </div>,\n      modalRoot // в index.html\n    );\n  }\n}\n\nModal.propTypes = {\n  children: PropTypes.node,\n  onClose: PropTypes.func.isRequired,\n};\n\nexport default Modal;\n","import axios from \"axios\";\nimport PropTypes from \"prop-types\";\n\naxios.defaults.baseURL = \"https://pixabay.com/api/\";\n\nconst apiKey = \"19822341-38023a333dc0ee1aeedcaef47\";\nconst perPage = 12;\n\nconst fetchImg = ({ query = \"\", page = 1 }) => {\n  const url = `?q=${query}&page=${page}&key=${apiKey}&image_type=photo&orientation=horizontal&per_page=${perPage}`;\n\n  return axios.get(url).then(({ data }) => data.hits);\n};\n\nfetchImg.propTypes = {\n  query: PropTypes.string.isRequired,\n  page: PropTypes.number.isRequired,\n};\n\nexport default fetchImg;\n","import React, { Component } from \"react\";\nimport Container from \"./components/Container\";\nimport SearchBar from \"./components/SearchBar\";\nimport ImageGallery from \"./components/ImageGallery\";\nimport Button from \"./components/Button\";\nimport Loader from \"react-loader-spinner\";\nimport Modal from \"./components/Modal\";\nimport fetchImg from \"./services/Pixabay\";\n// import { ToastContainer, toast } from \"react-toastify\";\nimport \"./App.css\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\n\nclass App extends Component {\n  state = {\n    query: \"\",\n    page: 1,\n    gallery: [],\n    loading: false,\n    showModal: false, // модалка открывается по state того компонента который хочет его открыть\n    largeImageURL: \"\",\n    alt: null,\n    error: null,\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    const { query } = this.state;\n    if (prevState.query !== query) {\n      this.getImgs();\n    }\n  }\n\n  handleSubmit = (search) => {\n    if (this.state.query === search) {\n      return;\n    }\n\n    this.setState({\n      query: search,\n      page: 1,\n      gallery: [],\n    });\n  };\n\n  getImgs = () => {\n    const { query, page } = this.state;\n\n    this.setState({ loading: true });\n\n    fetchImg({ query, page })\n      .then((gallery) => {\n        if (gallery.length === 0) {\n          alert(`Sorry! ${query} is not found`);\n        }\n        this.setState((prevState) => ({\n          gallery: [...prevState.gallery, ...gallery],\n          page: prevState.page + 1,\n        }));\n        this.scrollPageDown();\n      })\n      .catch((error) => this.setState({ error }))\n      .finally(() => {\n        this.setState({ loading: false });\n      });\n  };\n\n  scrollPageDown = () => {\n    // setTimeout(() => {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: \"smooth\",\n    });\n    // }, 600);\n  };\n\n  toggleModal = () => {\n    // метод открытия/закрытия модального окна\n    this.setState(({ showModal }) => ({\n      showModal: !showModal,\n    }));\n  };\n\n  setImgInfo = ({ largeImageURL, tags }) => {\n    this.setState({ largeImageURL, tags });\n    this.toggleModal();\n  };\n\n  render() {\n    const { gallery, showModal, largeImageURL, alt, loading, error } =\n      this.state;\n    return (\n      <Container>\n        <SearchBar onSubmit={this.handleSubmit} />\n        {error && <p>Whoops, something went wrong.</p>}\n        {loading && (\n          <Loader\n            className=\"Loader\"\n            type=\"TailSpin\"\n            color=\"#00BFFF\"\n            height={80}\n            width={80}\n            timeout={2000}\n          />\n        )}\n        <ImageGallery gallery={gallery} onSetImgInfo={this.setImgInfo} />\n        {gallery.length > 0 && !loading && <Button onLoadMore={this.getImgs} />}\n        {showModal && ( // если showModal = true, рендерим модалку\n          <Modal onClose={this.toggleModal}>\n            <img src={largeImageURL} alt={alt} width=\"800\" height=\"600\" />\n          </Modal>\n        )}\n        {/* <ToastContainer /> */}\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SearchBar\":\"SearchBar_SearchBar__2ZNF_\",\"SearchForm\":\"SearchBar_SearchForm__3veI3\",\"SearchForm_button\":\"SearchBar_SearchForm_button__10fFi\",\"SearchForm_button_label\":\"SearchBar_SearchForm_button_label__LkpIR\",\"SearchForm_input\":\"SearchBar_SearchForm_input__1dBga\"};"],"sourceRoot":""}